type CreateFlipbook {
  success: Boolean
  flipbook: FlipbookType
}

input CreateStoryletInput {
  title: String!
  description: String
  seriesId: Int
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

interface DefaultInterface {
  pk: ID!
  title: String
}

type DeletedFlipbookType {
  title: String
}

type DeleteFlipbook {
  success: Boolean
  flipbook: DeletedFlipbookType
}

type FlipbookType implements DefaultInterface {
  id64: String!
  description: String!
  series: SeriesType
  pk: ID!
  title: String
}

type Mutation {
  createFlipbook(inputData: CreateStoryletInput!): CreateFlipbook
  updateFlipbook(inputData: UpdateStoryletInput!): UpdateFlipbook
  deleteFlipbook(pk: Int!): DeleteFlipbook
}

type Query {
  allFlipbooks(search: String, first: Int, skip: Int): [FlipbookType]
  allFlipbooksByTitle(title: String): [FlipbookType]
  flipbook(id: Int, id64: String): FlipbookType
  seriess: [SeriesType]
}

type SeriesType implements DefaultInterface {
  id: ID!
  title: String
  slug: String!
  isDemo: Boolean!
  dateCreated: DateTime!
  dateModified: DateTime!
  flipbookSet: [FlipbookType!]!
  pk: ID!
}

type UpdateFlipbook {
  success: Boolean
  flipbook: FlipbookType
}

input UpdateStoryletInput {
  pk: Int!
  title: String
  description: String
  seriesId: Int
}

